[{"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\reportWebVitals.js":"1","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\App.js":"2","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Login\\index.js":"3","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Register\\index.js":"4","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\components\\MenuEnade\\index.js":"5","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Aluno\\index.js":"6","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\routes.js":"7","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\index.js":"8","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\service\\api.js":"9","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\NewQuestion\\index.js":"10","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Professor\\index.js":"11","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\components\\HeaderEnade\\index.js":"12","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Prova\\index.js":"13","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Prova\\enums.js":"14","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\RelacaoAlunos\\index.js":"15","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\components\\If\\index.js":"16"},{"size":362,"mtime":1606338370451,"results":"17","hashOfConfig":"18"},{"size":162,"mtime":1606432517233,"results":"19","hashOfConfig":"18"},{"size":859,"mtime":1606922058167,"results":"20","hashOfConfig":"18"},{"size":2508,"mtime":1606517661201,"results":"21","hashOfConfig":"18"},{"size":2392,"mtime":1606943319384,"results":"22","hashOfConfig":"18"},{"size":1717,"mtime":1606942712632,"results":"23","hashOfConfig":"18"},{"size":1021,"mtime":1607030477551,"results":"24","hashOfConfig":"18"},{"size":543,"mtime":1606429809160,"results":"25","hashOfConfig":"18"},{"size":121,"mtime":1606436340010,"results":"26","hashOfConfig":"18"},{"size":3901,"mtime":1606686757090,"results":"27","hashOfConfig":"18"},{"size":15627,"mtime":1607051580411,"results":"28","hashOfConfig":"18"},{"size":409,"mtime":1606685693441,"results":"29","hashOfConfig":"18"},{"size":6608,"mtime":1607031934979,"results":"30","hashOfConfig":"18"},{"size":213,"mtime":1606928402193,"results":"31","hashOfConfig":"18"},{"size":8489,"mtime":1607048337136,"results":"32","hashOfConfig":"18"},{"size":123,"mtime":1606517219403,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8a8ctt",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\reportWebVitals.js",[],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\App.js",[],["69","70"],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Login\\index.js",[],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Register\\index.js",[],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\components\\MenuEnade\\index.js",["71","72","73","74"],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Aluno\\index.js",[],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\routes.js",[],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\index.js",[],["75","76"],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\service\\api.js",[],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\NewQuestion\\index.js",["77"],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Professor\\index.js",["78","79","80","81"],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\components\\HeaderEnade\\index.js",[],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Prova\\index.js",["82","83","84","85"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Button, Card, Checkbox, Modal, Select, TextArea, Input, Icon, Form } from 'semantic-ui-react'\r\nimport api from '../../service/api';\r\nimport If from '../../components/If';\r\nimport { RESPOSTAS } from './enums';\r\n\r\nimport './styles.css';\r\n\r\nfunction Prova() {\r\n    const [prova, setProva] = useState({});\r\n    const [listaQuestoesProva, setListaQuestoesProva] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [resultado, setResultado] = useState('');\r\n\r\n    const buscarQuestoes = useCallback(async () => {\r\n        const { data: nextProva } = await api.get('prova/listar/1')\r\n        setProva(nextProva);\r\n\r\n        setListaQuestoesProva( \r\n             nextProva.listaQuestoes\r\n             .map((questao) => {\r\n                return {\r\n                    idQuestao: questao.idQuestao,\r\n                    resposta: ''\r\n                }\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    const finalizarProva = useCallback(async (provaAtual, questoes)=> {\r\n        const provaFinalizada = {            \r\n            idProva: 1,\r\n            idUsuario: 2,\r\n            questoes\r\n        };\r\n        console.log({\r\n            provaFinalizada\r\n        });\r\n        try{\r\n            const response = await api.post('/resultado/cadastrar', provaFinalizada);\r\n            console.log('resultado', response.data.valorObtido);\r\n            setResultado(response.data.valorObtido);\r\n            setOpen(true);\r\n        }catch (e) {\r\n            console.error({e});\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        buscarQuestoes();\r\n    }, [buscarQuestoes]);\r\n\r\n\r\n    const onClickResponse = useCallback((idQuestao, resposta)=>{\r\n        setListaQuestoesProva(questoes => questoes.map((questao)=> {\r\n            if(questao.idQuestao !== idQuestao ){\r\n                return questao;\r\n            }\r\n            return {...questao, resposta }\r\n        }));\r\n    }, []);\r\n\r\n    const isChecked = useCallback((idQuestao, resposta)=>{\r\n        const questao = listaQuestoesProva.find(q => q.idQuestao ===idQuestao);\r\n        if(!questao){\r\n            return false\r\n        }\r\n        return questao.resposta === resposta;\r\n    }, [listaQuestoesProva]);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='titleProva'>Prova</h1>\r\n                <form \r\n                    onSubmit={(e)=>{\r\n                        e.preventDefault();\r\n                        finalizarProva(prova, listaQuestoesProva);\r\n                    }}>\r\n                {prova.listaQuestoes && prova.listaQuestoes.map((questao, index) => {\r\n                    return (\r\n                        <Card.Group className='divCards' key={index}>\r\n                            <Card className='card'>\r\n                            <Card.Content>\r\n                                <Card.Header className='cardContent'>{`Pergunta: ${questao.descricao}`}</Card.Header>\r\n                                <If condition={questao.tpQuestao === 'Objetivas (formação geral)' || questao.tpQuestao === 'objetivas (componente específico)'}>\r\n                                    <Card.Description className='cardContentAlt'>\r\n                                    <Form.Group>\r\n                                        <Form.Radio label={`A) ${questao.alternativaA}`} checked={isChecked(questao.idQuestao, RESPOSTAS.ALTERNATIVA_A)} value={RESPOSTAS.ALTERNATIVA_A} onClick={() => onClickResponse(questao.idQuestao, RESPOSTAS.ALTERNATIVA_A)} id={`${questao.idQuestao}${RESPOSTAS.ALTERNATIVA_A}`}/>\r\n                                        <Form.Radio label={`B) ${questao.alternativaB}`} checked={isChecked(questao.idQuestao, RESPOSTAS.ALTERNATIVA_B)} value={RESPOSTAS.ALTERNATIVA_B} onClick={() => onClickResponse(questao.idQuestao, RESPOSTAS.ALTERNATIVA_B)} id={`${questao.idQuestao}${RESPOSTAS.ALTERNATIVA_B}`}/>\r\n                                        <Form.Radio label={`C) ${questao.alternativaC}`} checked={isChecked(questao.idQuestao, RESPOSTAS.ALTERNATIVA_C)} value={RESPOSTAS.ALTERNATIVA_C} onClick={() => onClickResponse(questao.idQuestao, RESPOSTAS.ALTERNATIVA_C)} id={`${questao.idQuestao}${RESPOSTAS.ALTERNATIVA_C}`}/>\r\n                                        <Form.Radio label={`D) ${questao.alternativaD}`} checked={isChecked(questao.idQuestao, RESPOSTAS.ALTERNATIVA_D)} value={RESPOSTAS.ALTERNATIVA_D} onClick={() => onClickResponse(questao.idQuestao, RESPOSTAS.ALTERNATIVA_D)} id={`${questao.idQuestao}${RESPOSTAS.ALTERNATIVA_D}`}/>\r\n                                        <Form.Radio label={`E) ${questao.alternativaE}`} checked={isChecked(questao.idQuestao, RESPOSTAS.ALTERNATIVA_E)} value={RESPOSTAS.ALTERNATIVA_E} onClick={() => onClickResponse(questao.idQuestao, RESPOSTAS.ALTERNATIVA_E)} id={`${questao.idQuestao}${RESPOSTAS.ALTERNATIVA_E}`}/>\r\n                                    </Form.Group>\r\n                                    </Card.Description>\r\n                                </If>\r\n                                <If condition={questao.tpQuestao === 'Discursivas (formação geral)' || questao.tpQuestao === 'Discursivas (componente específico)'}>\r\n                                    <Card.Description className='cardContent'>\r\n                                        <TextArea \r\n                                            placeholder='Resposta' \r\n                                            className='resp' \r\n                                            value={questao.resposta} \r\n                                            onChange={(e) => onClickResponse(questao.idQuestao, e.target.value)} \r\n                                            id={questao.idQuestao} \r\n                                        />\r\n                                    </Card.Description>\r\n                                </If>\r\n                            </Card.Content>\r\n                            </Card>\r\n                        </Card.Group>\r\n                    )\r\n                })}\r\n                <Button className='buttonFinalizarProva' type='submit' >Finalizar Prova</Button> \r\n            </form>\r\n\r\n\r\n            <Modal\r\n                onClose={() => setOpen(false)}\r\n                onOpen={() => setOpen(true)}\r\n                open={open}\r\n                >\r\n                <Modal.Header>Resultado da prova</Modal.Header>\r\n                <Modal.Content image>\r\n                    <Modal.Description>\r\n                        <p>{`Sua nota foi: ${resultado}`}</p>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Prova;","C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\Prova\\enums.js",[],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\pages\\RelacaoAlunos\\index.js",["86","87","88","89"],"C:\\Users\\Raphaelli Bellini\\Desktop\\webDinamic\\web-dinamico\\src\\components\\If\\index.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":18},{"ruleId":"94","severity":1,"message":"98","line":3,"column":16,"nodeType":"96","messageId":"97","endLine":3,"endColumn":22},{"ruleId":"94","severity":1,"message":"99","line":3,"column":24,"nodeType":"96","messageId":"97","endLine":3,"endColumn":28},{"ruleId":"94","severity":1,"message":"100","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":19},{"ruleId":"90","replacedBy":"101"},{"ruleId":"92","replacedBy":"102"},{"ruleId":"94","severity":1,"message":"103","line":16,"column":27,"nodeType":"96","messageId":"97","endLine":16,"endColumn":43},{"ruleId":"94","severity":1,"message":"103","line":19,"column":27,"nodeType":"96","messageId":"97","endLine":19,"endColumn":43},{"ruleId":"104","severity":1,"message":"105","line":113,"column":9,"nodeType":"106","messageId":"107","endLine":126,"endColumn":10},{"ruleId":"104","severity":1,"message":"105","line":155,"column":9,"nodeType":"106","messageId":"107","endLine":168,"endColumn":10},{"ruleId":"104","severity":1,"message":"105","line":200,"column":9,"nodeType":"106","messageId":"107","endLine":213,"endColumn":10},{"ruleId":"94","severity":1,"message":"108","line":2,"column":24,"nodeType":"96","messageId":"97","endLine":2,"endColumn":32},{"ruleId":"94","severity":1,"message":"109","line":2,"column":41,"nodeType":"96","messageId":"97","endLine":2,"endColumn":47},{"ruleId":"94","severity":1,"message":"110","line":2,"column":59,"nodeType":"96","messageId":"97","endLine":2,"endColumn":64},{"ruleId":"94","severity":1,"message":"99","line":2,"column":66,"nodeType":"96","messageId":"97","endLine":2,"endColumn":70},{"ruleId":"94","severity":1,"message":"98","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":16},{"ruleId":"94","severity":1,"message":"111","line":15,"column":12,"nodeType":"96","messageId":"97","endLine":15,"endColumn":17},{"ruleId":"94","severity":1,"message":"112","line":17,"column":12,"nodeType":"96","messageId":"97","endLine":17,"endColumn":22},{"ruleId":"94","severity":1,"message":"113","line":18,"column":12,"nodeType":"96","messageId":"97","endLine":18,"endColumn":25},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'logoBranco' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Icon' is defined but never used.","'HeaderEnade' is defined but never used.",["114"],["115"],"'setEstadoQuestao' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Checkbox' is defined but never used.","'Select' is defined but never used.","'Input' is defined but never used.","'notas' is assigned a value but never used.","'percentage' is assigned a value but never used.","'percentageBar' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]